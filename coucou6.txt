---
# Source: helm/templates/pgadmin/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: pgadmin-secret
  namespace: helm
type: Opaque
data:
  PGADMIN_DEFAULT_EMAIL: admin@admin.com
  PGADMIN_DEFAULT_PASSWORD: root
---
# Source: helm/templates/postgres/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: helm
type: Opaque
data:
  password: cGFzc3dvcmQ=
  user: YWRtaW4=
  db: c3RvcmVkYg==
---
# Source: helm/templates/postgres/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: helm/templates/fastapi/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: helm
spec:
  selector:
    app: fastapi
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: 80
      protocol: TCP
---
# Source: helm/templates/pgadmin/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service
  namespace: helm
spec:
  type: NodePort
  selector:
    app: pgadmin
  ports:
    - port: 80
      nodePort:
---
# Source: helm/templates/postgres/postgres-services.yaml
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: helm
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
# Source: helm/templates/fastapi/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: helm
spec:
  replicas: 3
  selector:
    matchLabels:
        app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
        - name: fastapi
          image: "alexb00/app_fastapi:latest"
          resources:
            requests:
              cpu: "50m"
            limits:
              cpu: "200m"
          ports:
            - containerPort: 80
---
# Source: helm/templates/pgadmin/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin-deployment
  namespace: helm
spec:
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: dpage/pgadmin4
          ports:
            - containerPort: 80
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: pgadmin-secret
                  key: PGADMIN_DEFAULT_EMAIL
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin-secret
                  key: PGADMIN_DEFAULT_PASSWORD
---
# Source: helm/templates/postgres/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: helm
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: user
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: db
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
# Source: helm/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: fastapi-hpa
  namespace: helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fastapi-deployment
  minReplicas: 3
  maxReplicas: 6
  targetCPUUtilizationPercentage: 70
---
# Source: helm/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: 
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: traefik
  tls:
    - secretName: rancher-secret
      hosts:
        - alex-is-testing.com
  rules:
    - host: alex-is-testing.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fastapi-service
                port:
                  number: 80
